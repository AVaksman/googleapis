// Copyright 2018 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.datacatalog.v1beta1;

import "google/api/annotations.proto";
import "google/cloud/datacatalog/v1beta1/schema.proto";
import "google/cloud/datacatalog/v1beta1/search.proto";
import "google/cloud/datacatalog/v1beta1/tags.proto";
import "google/iam/v1/iam_policy.proto";
import "google/iam/v1/policy.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option cc_enable_arenas = true;
option go_package = "google.golang.org/genproto/googleapis/cloud/datacatalog/v1beta1;datacatalog";
option java_multiple_files = true;
option java_package = "com.google.cloud.datacatalog";


// The Cloud Data Catalog API is a service that allows clients to discover,
// manage, and understand their Google Cloud data resources.
//
// To learn more about concepts and find how-to guides see
// https://cloud.google.com/data-catalog/docs/.
service DataCatalog {
  // Searches Cloud Data Catalog for multiple resources like entries, tags that
  // match a query.
  //
  // This API is a custom method
  // (https://cloud.google.com/apis/design/custom_methods), and does not return
  // the complete resource, only the resource identifier and high level
  // fields. Clients can subsequentally call Get APIs.
  //
  // See [Cloud Data Catalog Search
  // Syntax](/data-catalog/docs/how-to/search-reference)
  rpc SearchCatalog(SearchCatalogRequest) returns (SearchCatalogResponse) {
    option (google.api.http) = {
      get: "/v1beta1/catalog:search"
    };
  }

  // Get an entry by Resource name.
  rpc LookupEntry(LookupEntryRequest) returns (Entry) {
    option (google.api.http) = {
      get: "/v1beta1/entries:lookup"
    };
  }

  // Lists entries.
  rpc ListEntries(ListEntriesRequest) returns (ListEntriesResponse) {
    option (google.api.http) = {
      get: "/v1beta1/{parent=projects/*/datasets/*}/entries"
    };
  }

  // Create a tag template.
  rpc CreateTagTemplate(CreateTagTemplateRequest) returns (TagTemplate) {
    option (google.api.http) = {
      post: "/v1beta1/{parent=projects/*}/tagTemplates"
      body: "*"
    };
  }

  // Gets a tag template.
  rpc GetTagTemplate(GetTagTemplateRequest) returns (TagTemplate) {
    option (google.api.http) = {
      get: "/v1beta1/{name=projects/*/tagTemplates/*}"
    };
  }

  // Updates a tag template. This API cannot be used to update the fields of a
  // template (add/remove/change a field) -- use MutateTagTemplate to modify
  // fields.
  rpc UpdateTagTemplate(UpdateTagTemplateRequest) returns (TagTemplate) {
    option (google.api.http) = {
      patch: "/v1beta1/{tag_template.name=projects/*/tagTemplates/*}"
      body: "tag_template"
    };
  }

  // Mutates the fields of a tag template. This API can only modify the fields
  // of a template. To modify anything else, use UpdateTagTemplate.
  rpc MutateTagTemplate(MutateTagTemplateRequest) returns (TagTemplate) {
    option (google.api.http) = {
      post: "/v1beta1/{name=projects/*/tagTemplates/*}:mutate"
      body: "*"
    };
  }

  // Delete a tag template and all of that template's uses.
  rpc DeleteTagTemplate(DeleteTagTemplateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1beta1/{name=projects/*/tagTemplates/*}"
    };
  }

  // Create a Tag on an [Entry][google.cloud.datacatalog.v1beta1.Entry].
  rpc CreateTag(CreateTagRequest) returns (Tag) {
    option (google.api.http) = {
      post: "/v1beta1/{parent=projects/*/datasets/*/entries/*}/tags"
      body: "*"
    };
  }

  // Update an existing tag.
  rpc UpdateTag(UpdateTagRequest) returns (Tag) {
    option (google.api.http) = {
      patch: "/v1beta1/{tag.name=projects/*/datasets/*/entries/*/tags/*}"
      body: "*"
    };
  }

  // Delete a tag.
  rpc DeleteTag(DeleteTagRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1beta1/{name=projects/*/datasets/*/entries/*/tags/*}"
    };
  }

  // List tags on an entry.
  rpc ListTags(ListTagsRequest) returns (ListTagsResponse) {
    option (google.api.http) = {
      get: "/v1beta1/{parent=projects/*/datasets/*/entries/*}/tags"
    };
  }

  // Sets the access control policy for a resource. Replaces any existing
  // policy.
  // Supported resources are :- Tag Templates.
  // Note, this API cannot be used to manage policies for BigQuery, Pub/Sub and
  // any external GCP resources synced to Cloud Data Catalog.
  //
  // Callers must have Google IAM `datacatalog.tagTemplates.setIamPolicy` to
  // set set policy on tag templates.
  rpc SetIamPolicy(google.iam.v1.SetIamPolicyRequest) returns (google.iam.v1.Policy) {
    option (google.api.http) = {
      post: "/v1beta1/{resource=projects/*/tagTemplates/*}:setIamPolicy"
      body: "*"
      additional_bindings {
        post: "/v1beta1/{resource=projects/*/datasets/*/entries/*}:setIamPolicy"
        body: "*"
      }
    };
  }

  // Gets the access control policy for a resource. A `NOT_FOUND` error
  // is returned if the resource does not exist. An empty policy is returned
  // if the resource exists but does not have a policy set on it.
  //
  // Supported resource are :- Tag Templates.
  // Note, this API cannot be used to manage policies for BigQuery, Pub/Sub and
  // any external GCP resources synced to Cloud Data Catalog.
  //
  // Caller must have Google IAM `datacatalog.tagTemplates.getIamPolicy`
  // permission on the tag template resource.
  rpc GetIamPolicy(google.iam.v1.GetIamPolicyRequest) returns (google.iam.v1.Policy) {
    option (google.api.http) = {
      post: "/v1beta1/{resource=projects/*/tagTemplates/*}:getIamPolicy"
      body: "*"
      additional_bindings {
        post: "/v1beta1/{resource=projects/*/datasets/*/entries/*}:getIamPolicy"
        body: "*"
      }
    };
  }
}

// Request message for `SearchCatalog` API to search the Cloud Data Catalog.
message SearchCatalogRequest {
  // Required. The query string in search query syntax. The query must be
  // non-empty.
  //
  // Query strings can be simple as "x" or more qualified as:
  //
  // * name:x
  // * column:x
  // * desc:x OR description:y
  // * column_desc:x OR column_description:x
  //
  // See [Cloud Data Catalog Search
  // Syntax](/data-catalog/docs/how-to/search-reference) for more information.
  string query = 1;

  // Number of results in the search page. If <=0 then defaults to 10.
  // Max limit for page_size is 1000. Throws an invalid argument for page_size >
  // 1000.
  int32 page_size = 2;

  // Token that specifies which page is requested. If empty then the first page
  // is returned.
  string page_token = 3;

  // Specifies the ordering of results following syntax at
  // https://cloud.google.com/apis/design/design_patterns#sorting_order. We only
  // support ordering by a single metrics field and currently supported choices
  // are :
  //
  //  * 'relevance'
  //  * 'last_access_timestamp'
  //  * 'last_modified_timestamp' and
  //  * 'title'.
  string order_by = 5;
}

// Response message for `SearchCatalog` API to search the Cloud Data Catalog.
message SearchCatalogResponse {
  // Search results in descending order of relevance.
  repeated SearchCatalogResult results = 1;

  // The token that can be used to retrieve the next page of results.
  string next_page_token = 3;
}

// Request message for `LookupEntry` API to get an entry. This API allows the
// user to use the resource name of the source Google Cloud Platform service to
// get the Cloud Data Catalog Entry.
message LookupEntryRequest {
  // Required. The full name of the cloud resource the entry belongs to. See:
  // https://cloud.google.com/apis/design/resource_names#full_resource_name
  // Example:
  // "//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId".
  string full_resource_name = 1;
}

// Entry Metadata.
// An Entry resource object represents another resource in Google Cloud
// Platform, such as a BigQuery Dataset or a PubSub Topic. Clients can use the
// full resource name field in the Entry resource to refer to the original
// resource id of the source system.
//
// An Entry resource contains resource details, such as its schema. An Entry can
// also be used to attach flexible metadata, such as a
// [Tag][google.cloud.datacatalog.v1beta1.Tag].
message Entry {
  // The full name of the cloud resource the entry belongs to. See:
  // https://cloud.google.com/apis/design/resource_names#full_resource_name
  //
  // Data Catalog supports resources from different GCP systems.
  // `full_resource_name` provides more details on the source system which the
  // resource belongs to. For example, the `full_resource_name` for a table
  // resource with the BigQuery service is:
  //
  // "//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId".
  string full_resource_name = 9;

  // Type of entry.
  EntryType type = 2;

  // Display information such as title and description.
  // A short name to identify the entry, for example,
  // "Analytics Data - Jan 2011".
  string display_name = 3;

  // Entry description, which can consist of several sentences or paragraphs
  // that describe entry contents.
  string description = 4;

  // Schema of the entry.
  Schema schema = 5;

  // Output only. The creation time.
  google.protobuf.Timestamp create_time = 7;

  // Output only. The last-modified time.
  google.protobuf.Timestamp update_time = 8;
}

// Request message for `CreateTagTemplate` API to create a new Tag Template.
message CreateTagTemplateRequest {
  // Required. The name of the project this template is in. Example:
  // "projects/foo".
  string parent = 1;

  // The tag template to create.
  TagTemplate tag_template = 2;
}

// Request message for `GetTagTemplate` API to fetch an existing Tag Template.
message GetTagTemplateRequest {
  // Required. The name of the tag template. For example,
  // "projects/foo/tagTemplates/bar".
  string name = 1;
}

// Request message for `UpdateTagTemplate` API to modify an existing Tag
// Template.
//
// This API can only be used to update non-field components of the template
// (e.g., display name). Changes to the fields must use MutateAnnotationTemplate
// instead.
message UpdateTagTemplateRequest {
  // The template to update.
  TagTemplate tag_template = 1;

  // The field mask specifies the parts of the template to overwrite.
  // Allowed values:
  //
  //   * display_name
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for `MutateTagTemplate` to modify an existing Tag Template.
//
// This request cannot be used to remove all fields from a tag template.
message MutateTagTemplateRequest {
  // A mutation specifies a single operation to be performed.
  message Mutation {
    // Operation for deleting a field from the template.
    // Deleting a field removes all of its uses in any existing Tags.
    // If the given field name doesn't exist, this will silently succeed.
    message FieldDeleteOperation {
      // The name of the field to be deleted.
      string field_name = 1;
    }

    // Operation for upserting a field to the template.
    // If `field_name` doesn't exist, adds a new field to the tag template.
    // If `field_name` exists, the field will be updated using the new
    // `field_template`.
    message FieldUpsertOperation {
      // The name of the field to create/modify.
      string field_name = 1;

      // The specification of the field. Currently only the `display_name` can
      // be updated using this operation. Attempting to update any other
      // components of the field, such as the type, will return an error.
      TagFieldTemplate field_template = 2;
    }

    // Operation for renaming a field in a template.
    // Note that renaming is not equivalent to delete then upsert since deleting
    // a field will also delete the values associated with that field in
    // existing tags, whereas renaming will keep those values.
    // If `old_field_name` doesn't exist, returns an error.
    // If `new_field_name` already exists, returns an error.
    message FieldRenameOperation {
      // The current name of the field.
      string old_field_name = 1;

      // The name the field will be renamed to.
      string new_field_name = 2;
    }

    oneof operation {
      // Delete an existing field.
      FieldDeleteOperation field_delete_operation = 1;

      // Insert a new field, or update an existing field.
      FieldUpsertOperation field_upsert_operation = 2;

      // Rename an existing field.
      FieldRenameOperation field_rename_operation = 3;
    }
  }

  // Required. The name of the tag template. For example,
  // "projects/foo/tagTemplates/bar".
  string name = 1;

  // The mutation to apply. Note that the template MUST have at least one field
  // after the mutation, otherwise an error will be returned.
  Mutation mutation = 2;
}

// Request message for `DeleteTagTemplate` API.
message DeleteTagTemplateRequest {
  // The name of the tag template to delete. For example,
  // "projects/a/tagTemplates/b".
  string name = 1;
}

// Request message for `CreateTag` API to create tags for an
// [Entry][google.cloud.datacatalog.v1beta1.Entry] in Cloud Data Catalog.
message CreateTagRequest {
  // Required.
  // The name of the resource to attach this tag to. Tags can be attached to
  // Entries (example: "projects/foo/datasets/bar/entries/baz").
  string parent = 1;

  // The tag to create.
  Tag tag = 2;
}

// Request message for `UpdateTag` API to update Tag values.
message UpdateTagRequest {
  // The updated tag.
  Tag tag = 1;

  // The fields to update on the Tag.  If absent or empty, all modifiable fields
  // are updated.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for `DeleteTag` API to delete Tag values.
message DeleteTagRequest {
  // The name of the tag to delete. For example,
  // "projects/foo/datasets/bar/entries/baz/tags/t".
  string name = 1;
}

// Request message for `ListTags` API to list Tag values.
//
// This API can be used to fetch all tags for an
// [Entry][google.cloud.datacatalog.v1beta1.Entry], or, optionally, can be
// limited to a [TagTemplate][google.cloud.datacatalog.v1beta1.TagTemplate].
//
// Clients can specify filters to limit the results.
message ListTagsRequest {
  // Required.  The name of the resource to list the tags of.
  string parent = 1;

  // The full name of the cloud resource `parent` for looking up Tags. See:
  // https://cloud.google.com/apis/design/resource_names#full_resource_name
  string full_resource_name = 6;

  // Optional. The maximum number of tags to return. Default is 10. Max limit
  // is 1000.
  int32 page_size = 2;

  // Optional. Token that specifies which page is requested. If empty, the first
  // page is returned.
  string page_token = 3;

  // If set, return only tags that match the given filter.
  // If unset, all tags matching other fields are returned.
  // Supported keys:
  //
  // 1. "template". Filters to a particular tag template.
  //     Example: "template=projects/a/tagTemplates/b"
  // 2. "column". Filters to tags attached to a particular column.
  //     Examples: "column=my_column", "column=outer_column.inner_column",
  //     "column=`outer.column`.inner_column"
  string filter = 5;
}

// Response message for `ListTags` API.
message ListTagsResponse {
  // Tag details.
  repeated Tag tags = 1;

  // Token to retrieve the next page of results. It is set to empty if no items
  // remain in results.
  string next_page_token = 2;
}

// Request message for `ListEntries` API to list Entries.
message ListEntriesRequest {
  // Required. The dataset name that contains the entries, which can be provided
  // in URL format, for example, "projects/a/datasets/b".
  string parent = 1;

  // Optional. The maximum number of items to return. Default is 10. Max limit
  // is 1000. Throws an invalid argument for page_size > 1000.
  int32 page_size = 2;

  // Optional. Token that specifies which page is requested. If empty, the
  // first page is returned.
  string page_token = 3;
}

// Response to request to list entries in a dataset.
message ListEntriesResponse {
  // Entry details.
  repeated Entry entries = 1;

  // Token to retrieve the next page of results. It is set to empty if no items
  // remain in results.
  string next_page_token = 2;
}
