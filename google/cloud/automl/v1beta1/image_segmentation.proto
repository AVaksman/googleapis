// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.automl.v1beta1;

import "google/cloud/automl/v1beta1/data_items.proto";
import "google/api/annotations.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/automl/v1beta1;automl";
option java_multiple_files = true;
option java_package = "com.google.cloud.automl.v1beta1";
option php_namespace = "Google\\Cloud\\AutoMl\\V1beta1";

// Annotation details for image segmentation.
message ImageSegmentationAnnotation {
  // Output only.
  // One channel image which is encoded as an 8bit lossless PNG. The size of the
  // image will be the same as the original image. For a specific pixel, darker
  // color means less confidence in correctness of the cateogry in the
  // category_meask for the corresponding pixel. Black means no confidence and
  // white means full confidence.
  Image confidence_mask = 1;

  // Required.
  // One channel image which is encoded as an 8bit lossless PNG. Each pixel in
  // the image mask represents the category which the pixel in the original
  // image was predicted to belong to. For prediction result, the category must
  // corresponds to one of
  //
  // [thin_annotation_specs'][google.cloud.automl.v1beta1.ImageSegmentationModelMetadata.thin_annotation_specs]
  // [category][google.cloud.automl.v1beta1.ThinAnnotationSpec.category] in
  //
  // [image_segmentation_model_metadata][google.cloud.automl.v1beta1.Model.image_segmentation_model_metadata].
  // The model will choose the most likely category and if none of the
  // categories reach the confidence threshold, the pixel will be marked as
  // background.
  Image category_mask = 2;
}
