// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.secrets.v1alpha;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.Secrets.V1Alpha";
option go_package = "google.golang.org/genproto/googleapis/cloud/secrets/v1alpha;secrets";
option java_multiple_files = true;
option java_outer_classname = "ResourcesProto";
option java_package = "com.google.cloud.secrets.v1alpha";
option objc_class_prefix = "GSM";
option php_namespace = "Google\\Cloud\\Secrets\\V1alpha";

// A [Secret][google.cloud.secrets.v1alpha.Secret] represents a logical secret whose value and versions can
// be accessed.
//
// A [Secret][google.cloud.secrets.v1alpha.Secret] is made up of zero or more [SecretVersions][google.cloud.secrets.v1alpha.SecretVersion] that
// represent the secret data.
message Secret {
  // Output only. The resource name of the [Secret][google.cloud.secrets.v1alpha.Secret] in the
  // format `projects/*/secrets/*`.
  string name = 1;

  // The replication policy of the secret data associated with the [Secret][google.cloud.secrets.v1alpha.Secret].
  ReplicationPolicy policy = 2;

  // Output only. The time at which the [Secret][google.cloud.secrets.v1alpha.Secret] was created.
  google.protobuf.Timestamp create_time = 3;

  // Labels with user-defined metadata.
  map<string, string> labels = 4;

  // A mechanism for optimistic concurrency control. It is strongly suggested
  // that systems make use of the `etag` in the read-modify-write cycle to
  // perform secret updates in order to avoid race conditions.
  //
  // An `etag` is returned in [SecretManagerService.GetSecret][google.cloud.secrets.v1alpha.SecretManagerService.GetSecret], and systems
  // are expected to provide the `etag` in
  // [SecretManagerService.UpdateSecret][google.cloud.secrets.v1alpha.SecretManagerService.UpdateSecret] to ensure that the update will be
  // applied to the same version of the secret.
  //
  // If no `etag` is provided, the existing [Secret][google.cloud.secrets.v1alpha.Secret] is overwritten blindly.
  bytes etag = 5;
}

// A secret version resource in the Secret Manager API.
message SecretVersion {
  // The state of a [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion], indicating if it can be accessed.
  enum State {
    // Not specified.
    STATE_UNSPECIFIED = 0;

    // The [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] may be accessed.
    ENABLED = 1;

    // The [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] may not be accessed, but the secret data
    // is still available and can be placed back into the [ENABLED][google.cloud.secrets.v1alpha.SecretVersion.State.ENABLED]
    // state.
    DISABLED = 2;

    // The [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] is destroyed and the secret data is no longer
    // stored. A version may not leave this state once entered.
    DESTROYED = 3;
  }

  // Output only. The resource name of the [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] in the
  // format `projects/*/secrets/*/versions/*`.
  //
  // [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] IDs in a [Secret][google.cloud.secrets.v1alpha.Secret] start at 1 and
  // are incremented for each subsequent version of the secret.
  string name = 1;

  // Output only. The time at which the [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] was created.
  google.protobuf.Timestamp create_time = 2;

  // Output only. The time this [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion] was destroyed. Only present
  // if [state][google.cloud.secrets.v1alpha.SecretVersion.state] is
  // [DESTROYED][google.cloud.secrets.v1alpha.SecretVersion.State.DESTROYED].
  google.protobuf.Timestamp destroy_time = 3;

  // Output only. The current state of the [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion].
  State state = 4;
}

// A policy that defines the replication configuration of data.
message ReplicationPolicy {
  // The canonical IDs for GCP locations to replicate data into.
  // For example: `"us-east1"`.
  repeated string replica_locations = 1;
}

// A secret payload resource in the Secret Mangement API. This contains the
// sensitive secret data that is associated with a [SecretVersion][google.cloud.secrets.v1alpha.SecretVersion].
message SecretPayload {
  // The secret data.
  bytes data = 1;
}
