// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.industrialadaptivecontrols.v1alpha1;

import "google/api/field_behavior.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/industrialadaptivecontrols/v1alpha1;industrialadaptivecontrols";
option java_multiple_files = true;
option java_package = "com.google.cloud.industrialadaptivecontrols.v1alpha1";

// Serialized representation of a facility with all its child resources for
// importing purposes.
message SerializedFacility {
  // If specified the display name of the facility is updated.
  string display_name = 1;

  // Required. One or more controllable units of this facility.
  repeated SerializedControllableUnit controllable_units = 2
      [(google.api.field_behavior) = REQUIRED];
}

// A mechanical system that can be actuated independent of other mechanical
// systems.
message SerializedControllableUnit {
  // Required. Human readable name of the controllable unit.
  string display_name = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. External ID for mapping the created controllable unit with
  // client-side representation.
  string external_id = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. Trends of this controllable unit. There must be at least one
  // trend.
  repeated SerializedTrend trends = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. Setpoints of this controllable unit. There must be at least one
  // setpoint.
  repeated SerializedSetpoint setpoints = 4
      [(google.api.field_behavior) = REQUIRED];

  // Boolean Google SQL expressions that define the setpoint constraints the AI
  // recommendations should satisfy.
  repeated string setpoint_constraints = 5;

  // Constraints on the predicted values the AI recommendations should satisfy.
  // The expressions must be in the form of binary comparison between predicted
  // values and non-predicted values, i.e. in the form of
  // `<LHS> <COMPARATOR> <RHS>`.
  //
  //  * LHS is an expression in BigQuery SQL language with Industrial Adaptive
  //    Controls extensions. It must contain at least one `PREDICTED_VALUE`
  //    function. It must not contain any `MEASURED_VALUE`, `MEASURED_VALUES`,
  //    or `SETPOINT_VALUE` functions. The expression must return a number.
  //  * COMPARATOR must be one of `<`, `<=`, `>`, `>=`.
  //  * RHS is an expression in BigQuery SQL language with Industrial
  //    Adaptive Controls extensions. It must not contain any `PREDICTED_VALUE`
  //    function. It may contain `MEASURED_VALUE` or `SETPOINT_VALUE` functions.
  //    The expression must return a number.
  repeated string prediction_constraints = 6;

  // Required. The goal the AI system optimises for.
  Objective objective = 7 [(google.api.field_behavior) = REQUIRED];
}

// A logical unit that provides a continuous reading of values.
message SerializedTrend {
  // Properties of a trend over a period. All measurements measured between
  // `start_time` and `end_time` labeled with `external_id` are mapped to this
  // trend.
  message TrendProperties {
    // Required. Maps the measurement with the same external_id to this trend.
    string external_id = 1 [(google.api.field_behavior) = REQUIRED];

    // Required. The unit of the numerical value, e.g. "FAHRENHEIT" or
    // "CUBIC_METER_PER_MINUTE". The unit can be any string, but conversions
    // between units are only supported for standard units.
    //
    // If the numerical value doesn't have unit, set it to "UNITLESS".
    string unit = 2 [(google.api.field_behavior) = REQUIRED];

    // Inclusive time when the trend with this property starts to take effect.
    // If it's not specified, the trend starts from infinite past.
    google.protobuf.Timestamp start_time = 3;

    // Exclusive time when the trend with this property stops to take effect. If
    // it's not specified, the trend doesn't end.
    google.protobuf.Timestamp end_time = 4;
  }

  // Required. The current active trend properties.
  //
  // When the `external_id` of the `current_properties` is referenced in any
  // expression, the unit of the measured value is the unit specified in the
  // `current_properties`.
  TrendProperties current_properties = 1
      [(google.api.field_behavior) = REQUIRED];

  // Properties of this trend in the past. The time interval of the previous
  // properties and the current properties must be all disjoint.
  repeated TrendProperties previous_properties = 2;

  // Required. Type of the value reported by the trend.
  TrendSpec spec = 3 [(google.api.field_behavior) = REQUIRED];

  // Boolean expression for filtering out malformed measurements collected from
  // this trend. If the expression is evaluated as false for a measurement, it's
  // removed from the measurements.
  repeated string health_rules = 4;
}

// A knob or lever that can be used to control the controllable unit.
message SerializedSetpoint {
  // Required. External ID that identifies the setpoint.
  //
  // This ID must be unique across the setpoints under the same controllable
  // unit. External IDs are not required to be unique between setpoints and
  // sensors.
  string external_id = 1 [(google.api.field_behavior) = REQUIRED];

  string active_setpoint_trend_external_id = 2
      [(google.api.field_behavior) = REQUIRED];

  // External ID of the trend that echos the most recently received
  // recommendation value for this setpoint.
  //
  // This trend may report different value from the active trend if the client
  // decides not to actuate the recommendation for any reasons.
  //
  // When present, the unit of this trend must be the same as the unit of the
  // trend of active_setpoint_trend_external_id.
  string recommended_setpoint_trend_external_id = 3;

  // External ID of the trend that measures the feedback value corresponding to
  // the setpoint.
  // .
  string measured_value_trend_external_id = 4;

  // Required. Type of the setpoint value and its constraints.
  SetpointSpec spec = 5 [(google.api.field_behavior) = REQUIRED];
}

// Defines a possible category value.
message Category {
  // Required. The string value representing this category.
  string value = 1 [(google.api.field_behavior) = REQUIRED];
}

// Defines types and type-related attributes for measurement values
// reporting by trends.
message TrendSpec {
  // Spec for categorical values.
  message CategoricalSpec {
    // Required. All possible categories.
    repeated Category categories = 1 [(google.api.field_behavior) = REQUIRED];
  }

  // Spec for numerical values.
  message NumericalSpec {}

  // Required.
  oneof type {
    CategoricalSpec categorical = 1;

    NumericalSpec numerical = 2;
  }
}

// Defines types and type-related attributes for recommended setpoint value.
message SetpointSpec {
  // Spec for categorical values.
  message CategoricalSpec {
    // Required. All possible categories. Must contain more than 1 element.
    repeated Category categories = 1 [(google.api.field_behavior) = REQUIRED];

    // The value of the setpoint cannot be changed more than once in any window
    // of its value.
    google.protobuf.Duration change_period = 2;
  }

  // Spec for numerical values.
  message NumericalSpec {
    double minimum_value = 1 [(google.api.field_behavior) = REQUIRED];

    double maximum_value = 2 [(google.api.field_behavior) = REQUIRED];

    double minimum_increment = 3 [(google.api.field_behavior) = REQUIRED];

    double maximum_increment = 4 [(google.api.field_behavior) = REQUIRED];

    double minimum_decrement = 5 [(google.api.field_behavior) = REQUIRED];

    double maximum_decrement = 6 [(google.api.field_behavior) = REQUIRED];

    // The value of the setpoint cannot be changed more than once in any window
    // of its value.
    google.protobuf.Duration change_period = 7;
  }

  // Required.
  oneof type {
    CategoricalSpec categorical = 1;

    NumericalSpec numerical = 2;
  }
}

// The goal the AI system optimized for.
message Objective {
  enum ObjectiveGoal {
    // Invalid value. Must never be used.
    OBJECTIVE_GOAL_UNSPECIFIED = 0;

    // Maximize the return value of the objective function.
    MAXIMIZE = 1;

    // Minimize the return value of the objective function.
    MINIMIZE = 2;
  }

  enum AggregateFunction {
    AGGREGATE_FUNCTION_UNSPECIFIED = 0;

    MAX = 1;

    MIN = 2;

    AVG = 3;
  }

  // Required. The objective function in BigQuery SQL language with Industrial
  // Adaptive Controls extensions. The expression must return a number.
  string function = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. How should the AI system optimize for the objective function.
  ObjectiveGoal goal = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. Specify how to aggregate the objective function over the
  // prediction time horizon.
  AggregateFunction aggregate_function = 3
      [(google.api.field_behavior) = REQUIRED];
}
