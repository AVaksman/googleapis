// Copyright 2019 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package google.cloud.industrialadaptivecontrols.v1alpha1;

import "google/api/annotations.proto";
import "google/cloud/industrialadaptivecontrols/v1alpha1/io.proto";
import "google/cloud/industrialadaptivecontrols/v1alpha1/measurement.proto";
import "google/longrunning/operations.proto";
import "google/api/client.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/industrialadaptivecontrols/v1alpha1;industrialadaptivecontrols";
option java_multiple_files = true;
option java_package = "com.google.cloud.industrialadaptivecontrols.v1alpha1";

// Service for collecting sensor readings and setpoint values.
service MeasurementService {
  option (google.api.default_host) = "industrialadaptivecontrols.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

  // Imports facility historical equipment readings and setpoint values.
  rpc ImportMeasurements(ImportMeasurementsRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=projects/*/locations/*/facilities/*}:importMeasurements"
      body: "*"
    };
    option (google.longrunning.operation_info) = {
      response_type: "google.protobuf.Empty"
      metadata_type: "google.cloud.industrialadaptivecontrols.v1alpha1.OperationMetadata"
    };
  }

  // Collect recent equipment readings and setpoint values.
  rpc CollectMeasurements(CollectMeasurementsRequest) returns (CollectMeasurementsResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=projects/*/locations/*/facilities/*}:collectMeasurements"
      body: "*"
    };
  }
}

// Request message for [MeasurementService.ImportMeasurements][google.cloud.industrialadaptivecontrols.v1alpha1.MeasurementService.ImportMeasurements].
message ImportMeasurementsRequest {
  // Required. Existing facility name.
  // Form:
  // `projects/{project_id}/locations/{location_id}/facilities/{facility_id}`
  string name = 1;

  // Unique identifier provided by client, within the ancestor
  // dataset scope. Ensures idempotency. Up to 128 characters long.
  string request_id = 2;

  // Required. The location of the CSV file representing the historical measurements.
  // Each line of the CSV file is in the format of
  // `TREND_CLIENT_ID,MEASURE_TIME,VALUE`. The definition of each column is:
  //
  //  *  TREND_CLIENT_ID: The client ID of the trend object that reports this
  //     measurement.
  //  *  MEASURE_TIME: The time when this measurement is reported. The format is
  //     RFC 3339, e.g. `1972-01-01T10:00:20.021Z`.
  //  *  VALUE: A number or string, depending on the value type of the trend
  //     identified by TREND_CLIENT_ID at MEASURE_TIME.
  InputConfig input_config = 3;
}

// Request message for [MeasurementService.CollectMeasurements][google.cloud.industrialadaptivecontrols.v1alpha1.MeasurementService.CollectMeasurements].
message CollectMeasurementsRequest {
  // Required. Existing facility name.
  // Form:
  // `projects/{project_id}/locations/{location_id}/facilities/{facility_id}`
  string name = 1;

  // Unique identifier provided by client, within the ancestor
  // dataset scope. Ensures idempotency. Up to 128 characters long.
  string request_id = 2;

  // Required. The data collected from sensors. The command sensor measurements
  // along with all feedback sensor measurements are collected here as well.
  repeated Measurement sensor_measurements = 3;
}

// Response message for [MeasurementService.CollectMeasurements][google.cloud.industrialadaptivecontrols.v1alpha1.MeasurementService.CollectMeasurements].
message CollectMeasurementsResponse {

}
